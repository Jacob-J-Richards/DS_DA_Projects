train[is.na(train[,3]),3] <- median(feature_3_winsor_clean$feature_3)
colnames(train)[3] <- "feature_3_impute"
test[is.na(test[,3]),3] <- median(feature_3_winsor_clean$feature_3)
train_unmodified[is.na(train_unmodified[,2]) , 2] <- train_unmodified[is.na(train_unmodified[,2]),1]
train_unmodified[is.na(train_unmodified[,2]) , 2] <- train_unmodified[is.na(train_unmodified[,2]),3]
train$feature_2 <- train_unmodified$feature_2
colnames(train)[2] <- "feature_2_impute"
test[is.na(test[,2]) , 2] <- test[is.na(test[,2]),1]
test[is.na(test[,2]) , 2] <- test[is.na(test[,2]),3]
test$feature_2 <- test$feature_2
colnames(test)[2] <- "feature_2_impute"
library(ggplot2)
ggplot(data=train,aes(x=feature_1)) + geom_density() + geom_density(data=train,aes(x=feature_2_impute)) + geom_density(data=train,aes(x=feature_3_impute))
train
library(dplyr)
train %>%
mutate(feature_1 = (feature_1 - mean(feature_1, na.rm = TRUE)) / sd(feature_1, na.rm = TRUE))
mutate(feature_2_impute = (feature_2_impute - mean(feature_2_impute, na.rm = TRUE)) / sd(feature_2_impute, na.rm = TRUE))
library(tidyverse)
train <- read.csv(file="FITB_train.csv",header=TRUE)
test <- read.csv(file="FITB_test.csv",header=TRUE)
train_unmodified <- train
library(ggplot2)
ggplot(data=train,aes(feature_3)) + geom_density()
ggplot(data=test,aes(feature_3)) + geom_density()
train$key <- row.names(train)
feature_3_winsor <- data.frame(feature_3 = train$feature_3, key = row.names(train))
feature_3_winsor_clean <- na.omit(feature_3_winsor)
feature_3_winsor_clean <- feature_3_winsor_clean %>%
mutate(z_score = (feature_3 - mean(feature_3)) / sd(feature_3),percentile = ecdf(feature_3)(feature_3) * 100)
feature_3_winsor_df <- feature_3_winsor_clean[!(feature_3_winsor_clean[, 4] < 1 | feature_3_winsor_clean[, 4] > 99), ]
non_matching_keys <- anti_join(train, feature_3_winsor_df, by = "key")$key
train <- train %>% mutate(feature_3 = ifelse(key %in% non_matching_keys, NA, feature_3))
colnames(train)[3] <- "feature_3_winsor"
ggplot(data=train,aes(feature_3_winsor)) + geom_density()
train[is.na(train[,3]),3] <- median(feature_3_winsor_clean$feature_3)
colnames(train)[3] <- "feature_3_impute"
test[is.na(test[,3]),3] <- median(feature_3_winsor_clean$feature_3)
train_unmodified[is.na(train_unmodified[,2]) , 2] <- train_unmodified[is.na(train_unmodified[,2]),1]
train_unmodified[is.na(train_unmodified[,2]) , 2] <- train_unmodified[is.na(train_unmodified[,2]),3]
train$feature_2 <- train_unmodified$feature_2
colnames(train)[2] <- "feature_2_impute"
test[is.na(test[,2]) , 2] <- test[is.na(test[,2]),1]
test[is.na(test[,2]) , 2] <- test[is.na(test[,2]),3]
test$feature_2 <- test$feature_2
colnames(test)[2] <- "feature_2_impute"
library(ggplot2)
ggplot(data=train,aes(x=feature_1)) + geom_density() + geom_density(data=train,aes(x=feature_2_impute)) + geom_density(data=train,aes(x=feature_3_impute))
train
library(dplyr)
train %>%
mutate(feature_1 = (feature_1 - mean(feature_1, na.rm = TRUE)) / sd(feature_1, na.rm = TRUE))
mutate(feature_2_impute = (feature_2_impute - mean(feature_2_impute, na.rm = TRUE)) / sd(feature_2_impute, na.rm = TRUE))
library(tidyverse)
train <- read.csv(file="FITB_train.csv",header=TRUE)
test <- read.csv(file="FITB_test.csv",header=TRUE)
train_unmodified <- train
library(ggplot2)
ggplot(data=train,aes(feature_3)) + geom_density()
ggplot(data=test,aes(feature_3)) + geom_density()
train$key <- row.names(train)
feature_3_winsor <- data.frame(feature_3 = train$feature_3, key = row.names(train))
feature_3_winsor_clean <- na.omit(feature_3_winsor)
feature_3_winsor_clean <- feature_3_winsor_clean %>%
mutate(z_score = (feature_3 - mean(feature_3)) / sd(feature_3),percentile = ecdf(feature_3)(feature_3) * 100)
feature_3_winsor_df <- feature_3_winsor_clean[!(feature_3_winsor_clean[, 4] < 1 | feature_3_winsor_clean[, 4] > 99), ]
non_matching_keys <- anti_join(train, feature_3_winsor_df, by = "key")$key
train <- train %>% mutate(feature_3 = ifelse(key %in% non_matching_keys, NA, feature_3))
colnames(train)[3] <- "feature_3_winsor"
ggplot(data=train,aes(feature_3_winsor)) + geom_density()
train[is.na(train[,3]),3] <- median(feature_3_winsor_clean$feature_3)
colnames(train)[3] <- "feature_3_impute"
test[is.na(test[,3]),3] <- median(feature_3_winsor_clean$feature_3)
train_unmodified[is.na(train_unmodified[,2]) , 2] <- train_unmodified[is.na(train_unmodified[,2]),1]
train_unmodified[is.na(train_unmodified[,2]) , 2] <- train_unmodified[is.na(train_unmodified[,2]),3]
train$feature_2 <- train_unmodified$feature_2
colnames(train)[2] <- "feature_2_impute"
test[is.na(test[,2]) , 2] <- test[is.na(test[,2]),1]
test[is.na(test[,2]) , 2] <- test[is.na(test[,2]),3]
test$feature_2 <- test$feature_2
colnames(test)[2] <- "feature_2_impute"
library(ggplot2)
ggplot(data=train,aes(x=feature_1)) + geom_density() + geom_density(data=train,aes(x=feature_2_impute)) + geom_density(data=train,aes(x=feature_3_impute))
train
train
library(dplyr)
train %>%
mutate(feature_1 = (feature_1 - mean(feature_1, na.rm = TRUE)) / sd(feature_1, na.rm = TRUE))
mutate(feature_2_impute = (feature_2_impute - mean(feature_2_impute, na.rm = TRUE)) / sd(feature_2_impute, na.rm = TRUE))
library(tidyverse)
train <- read.csv(file="FITB_train.csv",header=TRUE)
test <- read.csv(file="FITB_test.csv",header=TRUE)
train_unmodified <- train
library(ggplot2)
ggplot(data=train,aes(feature_3)) + geom_density()
ggplot(data=test,aes(feature_3)) + geom_density()
train$key <- row.names(train)
feature_3_winsor <- data.frame(feature_3 = train$feature_3, key = row.names(train))
feature_3_winsor_clean <- na.omit(feature_3_winsor)
feature_3_winsor_clean <- feature_3_winsor_clean %>%
mutate(z_score = (feature_3 - mean(feature_3)) / sd(feature_3),percentile = ecdf(feature_3)(feature_3) * 100)
feature_3_winsor_df <- feature_3_winsor_clean[!(feature_3_winsor_clean[, 4] < 1 | feature_3_winsor_clean[, 4] > 99), ]
non_matching_keys <- anti_join(train, feature_3_winsor_df, by = "key")$key
train <- train %>% mutate(feature_3 = ifelse(key %in% non_matching_keys, NA, feature_3))
colnames(train)[3] <- "feature_3_winsor"
ggplot(data=train,aes(feature_3_winsor)) + geom_density()
train[is.na(train[,3]),3] <- median(feature_3_winsor_clean$feature_3)
colnames(train)[3] <- "feature_3_impute"
test[is.na(test[,3]),3] <- median(feature_3_winsor_clean$feature_3)
train_unmodified[is.na(train_unmodified[,2]) , 2] <- train_unmodified[is.na(train_unmodified[,2]),1]
train_unmodified[is.na(train_unmodified[,2]) , 2] <- train_unmodified[is.na(train_unmodified[,2]),3]
train$feature_2 <- train_unmodified$feature_2
colnames(train)[2] <- "feature_2_impute"
test[is.na(test[,2]) , 2] <- test[is.na(test[,2]),1]
test[is.na(test[,2]) , 2] <- test[is.na(test[,2]),3]
test$feature_2 <- test$feature_2
colnames(test)[2] <- "feature_2_impute"
library(ggplot2)
ggplot(data=train,aes(x=feature_1)) + geom_density() + geom_density(data=train,aes(x=feature_2_impute)) + geom_density(data=train,aes(x=feature_3_impute))
train
train
library(dplyr)
train %>%
mutate(feature_1 = (feature_1 - mean(feature_1, na.rm = TRUE)) / sd(feature_1, na.rm = TRUE))
mutate(feature_2_impute = (feature_2_impute - mean(feature_2_impute, na.rm = TRUE)) / sd(feature_2_impute, na.rm = TRUE))
library(tidyverse)
train <- read.csv(file="FITB_train.csv",header=TRUE)
test <- read.csv(file="FITB_test.csv",header=TRUE)
train_unmodified <- train
library(ggplot2)
ggplot(data=train,aes(feature_3)) + geom_density()
ggplot(data=test,aes(feature_3)) + geom_density()
train$key <- row.names(train)
feature_3_winsor <- data.frame(feature_3 = train$feature_3, key = row.names(train))
feature_3_winsor_clean <- na.omit(feature_3_winsor)
feature_3_winsor_clean <- feature_3_winsor_clean %>%
mutate(z_score = (feature_3 - mean(feature_3)) / sd(feature_3),percentile = ecdf(feature_3)(feature_3) * 100)
feature_3_winsor_df <- feature_3_winsor_clean[!(feature_3_winsor_clean[, 4] < 1 | feature_3_winsor_clean[, 4] > 99), ]
non_matching_keys <- anti_join(train, feature_3_winsor_df, by = "key")$key
train <- train %>% mutate(feature_3 = ifelse(key %in% non_matching_keys, NA, feature_3))
colnames(train)[3] <- "feature_3_winsor"
ggplot(data=train,aes(feature_3_winsor)) + geom_density()
train[is.na(train[,3]),3] <- median(feature_3_winsor_clean$feature_3)
colnames(train)[3] <- "feature_3_impute"
test[is.na(test[,3]),3] <- median(feature_3_winsor_clean$feature_3)
train_unmodified[is.na(train_unmodified[,2]) , 2] <- train_unmodified[is.na(train_unmodified[,2]),1]
train_unmodified[is.na(train_unmodified[,2]) , 2] <- train_unmodified[is.na(train_unmodified[,2]),3]
train$feature_2 <- train_unmodified$feature_2
colnames(train)[2] <- "feature_2_impute"
test[is.na(test[,2]) , 2] <- test[is.na(test[,2]),1]
test[is.na(test[,2]) , 2] <- test[is.na(test[,2]),3]
test$feature_2 <- test$feature_2
colnames(test)[2] <- "feature_2_impute"
library(ggplot2)
ggplot(data=train,aes(x=feature_1)) + geom_density() + geom_density(data=train,aes(x=feature_2_impute)) + geom_density(data=train,aes(x=feature_3_impute))
train
train
library(dplyr)
train %>%
mutate(feature_1 = (feature_1 - mean(feature_1, na.rm = TRUE)) / sd(feature_1, na.rm = TRUE))
mutate(feature_2_impute = (feature_2_impute - mean(feature_2_impute, na.rm = TRUE)) / sd(feature_2_impute, na.rm = TRUE))
train_unmodified[is.na(train_unmodified[,2]) , 2] <- train_unmodified[is.na(train_unmodified[,2]),1]
train_unmodified[is.na(train_unmodified[,2]) , 2] <- train_unmodified[is.na(train_unmodified[,2]),3]
train$feature_2 <- train_unmodified$feature_2
colnames(train)[2] <- "feature_2_impute"
test[is.na(test[,2]) , 2] <- test[is.na(test[,2]),1]
test[is.na(test[,2]) , 2] <- test[is.na(test[,2]),3]
test$feature_2 <- test$feature_2
colnames(test)[2] <- "feature_2_impute"
library(tidyverse)
train <- read.csv(file="FITB_train.csv",header=TRUE)
test <- read.csv(file="FITB_test.csv",header=TRUE)
train_unmodified <- train
library(ggplot2)
ggplot(data=train,aes(feature_3)) + geom_density()
ggplot(data=test,aes(feature_3)) + geom_density()
train$key <- row.names(train)
feature_3_winsor <- data.frame(feature_3 = train$feature_3, key = row.names(train))
feature_3_winsor_clean <- na.omit(feature_3_winsor)
feature_3_winsor_clean <- feature_3_winsor_clean %>%
mutate(z_score = (feature_3 - mean(feature_3)) / sd(feature_3),percentile = ecdf(feature_3)(feature_3) * 100)
feature_3_winsor_df <- feature_3_winsor_clean[!(feature_3_winsor_clean[, 4] < 1 | feature_3_winsor_clean[, 4] > 99), ]
non_matching_keys <- anti_join(train, feature_3_winsor_df, by = "key")$key
train <- train %>% mutate(feature_3 = ifelse(key %in% non_matching_keys, NA, feature_3))
colnames(train)[3] <- "feature_3_winsor"
ggplot(data=train,aes(feature_3_winsor)) + geom_density()
train[is.na(train[,3]),3] <- median(feature_3_winsor_clean$feature_3)
colnames(train)[3] <- "feature_3_impute"
test[is.na(test[,3]),3] <- median(feature_3_winsor_clean$feature_3)
train_unmodified[is.na(train_unmodified[,2]) , 2] <- train_unmodified[is.na(train_unmodified[,2]),1]
train_unmodified[is.na(train_unmodified[,2]) , 2] <- train_unmodified[is.na(train_unmodified[,2]),3]
train$feature_2 <- train_unmodified$feature_2
colnames(train)[2] <- "feature_2_impute"
test[is.na(test[,2]) , 2] <- test[is.na(test[,2]),1]
test[is.na(test[,2]) , 2] <- test[is.na(test[,2]),3]
test$feature_2 <- test$feature_2
colnames(test)[2] <- "feature_2_impute"
train
library(ggplot2)
ggplot(data=train,aes(x=feature_1)) + geom_density() + geom_density(data=train,aes(x=feature_2_impute)) + geom_density(data=train,aes(x=feature_3_impute))
train
train
library(dplyr)
train %>%
mutate(feature_1 = (feature_1 - mean(feature_1, na.rm = TRUE)) / sd(feature_1, na.rm = TRUE))
mutate(feature_2_impute = (feature_2_impute - mean(feature_2_impute, na.rm = TRUE)) / sd(feature_2_impute, na.rm = TRUE))
library(tidyverse)
train <- read.csv(file="FITB_train.csv",header=TRUE)
test <- read.csv(file="FITB_test.csv",header=TRUE)
train_unmodified <- train
library(ggplot2)
ggplot(data=train,aes(feature_3)) + geom_density()
ggplot(data=test,aes(feature_3)) + geom_density()
train$key <- row.names(train)
feature_3_winsor <- data.frame(feature_3 = train$feature_3, key = row.names(train))
feature_3_winsor_clean <- na.omit(feature_3_winsor)
feature_3_winsor_clean <- feature_3_winsor_clean %>%
mutate(z_score = (feature_3 - mean(feature_3)) / sd(feature_3),percentile = ecdf(feature_3)(feature_3) * 100)
feature_3_winsor_df <- feature_3_winsor_clean[!(feature_3_winsor_clean[, 4] < 1 | feature_3_winsor_clean[, 4] > 99), ]
non_matching_keys <- anti_join(train, feature_3_winsor_df, by = "key")$key
train <- train %>% mutate(feature_3 = ifelse(key %in% non_matching_keys, NA, feature_3))
colnames(train)[3] <- "feature_3_winsor"
ggplot(data=train,aes(feature_3_winsor)) + geom_density()
train[is.na(train[,3]),3] <- median(feature_3_winsor_clean$feature_3)
colnames(train)[3] <- "feature_3_impute"
test[is.na(test[,3]),3] <- median(feature_3_winsor_clean$feature_3)
train_unmodified[is.na(train_unmodified[,2]) , 2] <- train_unmodified[is.na(train_unmodified[,2]),1]
train_unmodified[is.na(train_unmodified[,2]) , 2] <- train_unmodified[is.na(train_unmodified[,2]),3]
train$feature_2 <- train_unmodified$feature_2
colnames(train)[2] <- "feature_2_impute"
test[is.na(test[,2]) , 2] <- test[is.na(test[,2]),1]
test[is.na(test[,2]) , 2] <- test[is.na(test[,2]),3]
test$feature_2 <- test$feature_2
colnames(test)[2] <- "feature_2_impute"
train
(colnames(train))
library(ggplot2)
ggplot(data=train,aes(x=feature_1)) + geom_density() + geom_density(data=train,aes(x=feature_2_impute)) + geom_density(data=train,aes(x=feature_3_impute))
train
train
library(dplyr)
train %>%
mutate(feature_1 = (feature_1 - mean(feature_1, na.rm = TRUE)) / sd(feature_1, na.rm = TRUE))
mutate(feature_2_impute = (feature_2_impute - mean(feature_2_impute, na.rm = TRUE)) / sd(feature_2_impute, na.rm = TRUE))
library(dplyr)
train %>%
mutate(feature_1 = (feature_1 - mean(feature_1, na.rm = TRUE)) / sd(feature_1, na.rm = TRUE))
train %>%
mutate(feature_2_impute = (feature_2_impute - mean(feature_2_impute, na.rm = TRUE)) / sd(feature_2_impute, na.rm = TRUE))
train %>%
mutate(feature_3_impute = (feature_3_impute - mean(feature_3_impute, na.rm = TRUE)) / sd(feature_3_impute, na.rm = TRUE))
train %>%
mutate(feature_4 = (feature_4 - mean(feature_4, na.rm = TRUE)) / sd(feature_4, na.rm = TRUE))
library(dplyr)
train %>%
mutate(feature_1 = (feature_1 - mean(feature_1, na.rm = TRUE)) / sd(feature_1, na.rm = TRUE))
train %>%
mutate(feature_2_impute = (feature_2_impute - mean(feature_2_impute, na.rm = TRUE)) / sd(feature_2_impute, na.rm = TRUE))
train %>%
mutate(feature_3_impute = (feature_3_impute - mean(feature_3_impute, na.rm = TRUE)) / sd(feature_3_impute, na.rm = TRUE))
train %>%
mutate(feature_4 = (feature_4 - mean(feature_4, na.rm = TRUE)) / sd(feature_4, na.rm = TRUE))
library(tidyverse)
train <- read.csv(file="FITB_train.csv",header=TRUE)
test <- read.csv(file="FITB_test.csv",header=TRUE)
train_unmodified <- train
library(ggplot2)
ggplot(data=train,aes(feature_3)) + geom_density()
ggplot(data=test,aes(feature_3)) + geom_density()
train$key <- row.names(train)
feature_3_winsor <- data.frame(feature_3 = train$feature_3, key = row.names(train))
feature_3_winsor_clean <- na.omit(feature_3_winsor)
feature_3_winsor_clean <- feature_3_winsor_clean %>%
mutate(z_score = (feature_3 - mean(feature_3)) / sd(feature_3),percentile = ecdf(feature_3)(feature_3) * 100)
feature_3_winsor_df <- feature_3_winsor_clean[!(feature_3_winsor_clean[, 4] < 1 | feature_3_winsor_clean[, 4] > 99), ]
non_matching_keys <- anti_join(train, feature_3_winsor_df, by = "key")$key
train <- train %>% mutate(feature_3 = ifelse(key %in% non_matching_keys, NA, feature_3))
colnames(train)[3] <- "feature_3_winsor"
ggplot(data=train,aes(feature_3_winsor)) + geom_density()
train[is.na(train[,3]),3] <- median(feature_3_winsor_clean$feature_3)
colnames(train)[3] <- "feature_3_impute"
test[is.na(test[,3]),3] <- median(feature_3_winsor_clean$feature_3)
train_unmodified[is.na(train_unmodified[,2]) , 2] <- train_unmodified[is.na(train_unmodified[,2]),1]
train_unmodified[is.na(train_unmodified[,2]) , 2] <- train_unmodified[is.na(train_unmodified[,2]),3]
train$feature_2 <- train_unmodified$feature_2
colnames(train)[2] <- "feature_2_impute"
test[is.na(test[,2]) , 2] <- test[is.na(test[,2]),1]
test[is.na(test[,2]) , 2] <- test[is.na(test[,2]),3]
test$feature_2 <- test$feature_2
colnames(test)[2] <- "feature_2_impute"
train
(colnames(train))
library(ggplot2)
ggplot(data=train,aes(x=feature_1)) + geom_density() + geom_density(data=train,aes(x=feature_2_impute)) + geom_density(data=train,aes(x=feature_3_impute))
train
library(dplyr)
train %>%
mutate(feature_1 = (feature_1 - mean(feature_1, na.rm = TRUE)) / sd(feature_1, na.rm = TRUE))
train %>%
mutate(feature_2_impute = (feature_2_impute - mean(feature_2_impute, na.rm = TRUE)) / sd(feature_2_impute, na.rm = TRUE))
train %>%
mutate(feature_3_impute = (feature_3_impute - mean(feature_3_impute, na.rm = TRUE)) / sd(feature_3_impute, na.rm = TRUE))
train %>%
mutate(feature_4 = (feature_4 - mean(feature_4, na.rm = TRUE)) / sd(feature_4, na.rm = TRUE))
library(tidyverse)
train <- read.csv(file="FITB_train.csv",header=TRUE)
test <- read.csv(file="FITB_test.csv",header=TRUE)
train_unmodified <- train
library(ggplot2)
ggplot(data=train,aes(feature_3)) + geom_density()
ggplot(data=test,aes(feature_3)) + geom_density()
train$key <- row.names(train)
feature_3_winsor <- data.frame(feature_3 = train$feature_3, key = row.names(train))
feature_3_winsor_clean <- na.omit(feature_3_winsor)
feature_3_winsor_clean <- feature_3_winsor_clean %>%
mutate(z_score = (feature_3 - mean(feature_3)) / sd(feature_3),percentile = ecdf(feature_3)(feature_3) * 100)
feature_3_winsor_df <- feature_3_winsor_clean[!(feature_3_winsor_clean[, 4] < 1 | feature_3_winsor_clean[, 4] > 99), ]
non_matching_keys <- anti_join(train, feature_3_winsor_df, by = "key")$key
train <- train %>% mutate(feature_3 = ifelse(key %in% non_matching_keys, NA, feature_3))
colnames(train)[3] <- "feature_3_winsor"
ggplot(data=train,aes(feature_3_winsor)) + geom_density()
train[is.na(train[,3]),3] <- median(feature_3_winsor_clean$feature_3)
colnames(train)[3] <- "feature_3_impute"
test[is.na(test[,3]),3] <- median(feature_3_winsor_clean$feature_3)
train_unmodified[is.na(train_unmodified[,2]) , 2] <- train_unmodified[is.na(train_unmodified[,2]),1]
train_unmodified[is.na(train_unmodified[,2]) , 2] <- train_unmodified[is.na(train_unmodified[,2]),3]
train$feature_2 <- train_unmodified$feature_2
colnames(train)[2] <- "feature_2_impute"
test[is.na(test[,2]) , 2] <- test[is.na(test[,2]),1]
test[is.na(test[,2]) , 2] <- test[is.na(test[,2]),3]
test$feature_2 <- test$feature_2
colnames(test)[2] <- "feature_2_impute"
train
(colnames(train))
library(ggplot2)
ggplot(data=train,aes(x=feature_1)) + geom_density() + geom_density(data=train,aes(x=feature_2_impute)) + geom_density(data=train,aes(x=feature_3_impute))
train
library(dplyr)
train %>%
mutate(feature_1 = (feature_1 - mean(feature_1, na.rm = TRUE)) / sd(feature_1, na.rm = TRUE))
train %>%
mutate(feature_2_impute = (feature_2_impute - mean(feature_2_impute, na.rm = TRUE)) / sd(feature_2_impute, na.rm = TRUE))
train %>%
mutate(feature_3_impute = (feature_3_impute - mean(feature_3_impute, na.rm = TRUE)) / sd(feature_3_impute, na.rm = TRUE))
train %>%
mutate(feature_4 = (feature_4 - mean(feature_4, na.rm = TRUE)) / sd(feature_4, na.rm = TRUE))
train
train %>%
mutate(feature_2_impute = (feature_2_impute - mean(feature_2_impute, na.rm = TRUE)) / sd(feature_2_impute, na.rm = TRUE))
train %>%
mutate(feature_3_impute = (feature_3_impute - mean(feature_3_impute, na.rm = TRUE)) / sd(feature_3_impute, na.rm = TRUE))
library(tidyverse)
train <- read.csv(file="FITB_train.csv",header=TRUE)
test <- read.csv(file="FITB_test.csv",header=TRUE)
train_unmodified <- train
library(ggplot2)
ggplot(data=train,aes(feature_3)) + geom_density()
ggplot(data=test,aes(feature_3)) + geom_density()
train$key <- row.names(train)
feature_3_winsor <- data.frame(feature_3 = train$feature_3, key = row.names(train))
feature_3_winsor_clean <- na.omit(feature_3_winsor)
feature_3_winsor_clean <- feature_3_winsor_clean %>%
mutate(z_score = (feature_3 - mean(feature_3)) / sd(feature_3),percentile = ecdf(feature_3)(feature_3) * 100)
feature_3_winsor_df <- feature_3_winsor_clean[!(feature_3_winsor_clean[, 4] < 1 | feature_3_winsor_clean[, 4] > 99), ]
non_matching_keys <- anti_join(train, feature_3_winsor_df, by = "key")$key
train <- train %>% mutate(feature_3 = ifelse(key %in% non_matching_keys, NA, feature_3))
colnames(train)[3] <- "feature_3_winsor"
ggplot(data=train,aes(feature_3_winsor)) + geom_density()
train[is.na(train[,3]),3] <- median(feature_3_winsor_clean$feature_3)
colnames(train)[3] <- "feature_3_impute"
test[is.na(test[,3]),3] <- median(feature_3_winsor_clean$feature_3)
train_unmodified[is.na(train_unmodified[,2]) , 2] <- train_unmodified[is.na(train_unmodified[,2]),1]
train_unmodified[is.na(train_unmodified[,2]) , 2] <- train_unmodified[is.na(train_unmodified[,2]),3]
train$feature_2 <- train_unmodified$feature_2
colnames(train)[2] <- "feature_2_impute"
test[is.na(test[,2]) , 2] <- test[is.na(test[,2]),1]
test[is.na(test[,2]) , 2] <- test[is.na(test[,2]),3]
test$feature_2 <- test$feature_2
colnames(test)[2] <- "feature_2_impute"
train
(colnames(train))
library(ggplot2)
ggplot(data=train,aes(x=feature_1)) + geom_density() + geom_density(data=train,aes(x=feature_2_impute)) + geom_density(data=train,aes(x=feature_3_impute))
train
library(dplyr)
train %>%
mutate(feature_1 = (feature_1 - mean(feature_1, na.rm = TRUE)) / sd(feature_1, na.rm = TRUE))
train %>%
mutate(feature_2_impute = (feature_2_impute - mean(feature_2_impute, na.rm = TRUE)) / sd(feature_2_impute, na.rm = TRUE))
train %>%
mutate(feature_3_impute = (feature_3_impute - mean(feature_3_impute, na.rm = TRUE)) / sd(feature_3_impute, na.rm = TRUE))
train %>%
mutate(feature_4 = (feature_4 - mean(feature_4, na.rm = TRUE)) / sd(feature_4, na.rm = TRUE))
train %>%
mutate(feature_1 = (feature_1 - mean(feature_1, na.rm = TRUE)) / sd(feature_1, na.rm = TRUE))
train %>%
mutate(feature_2_impute = (feature_2_impute - mean(feature_2_impute, na.rm = TRUE)) / sd(feature_2_impute, na.rm = TRUE))
library(tidyverse)
train <- read.csv(file="FITB_train.csv",header=TRUE)
test <- read.csv(file="FITB_test.csv",header=TRUE)
train_unmodified <- train
library(ggplot2)
ggplot(data=train,aes(feature_3)) + geom_density()
ggplot(data=test,aes(feature_3)) + geom_density()
train$key <- row.names(train)
feature_3_winsor <- data.frame(feature_3 = train$feature_3, key = row.names(train))
feature_3_winsor_clean <- na.omit(feature_3_winsor)
feature_3_winsor_clean <- feature_3_winsor_clean %>%
mutate(z_score = (feature_3 - mean(feature_3)) / sd(feature_3),percentile = ecdf(feature_3)(feature_3) * 100)
feature_3_winsor_df <- feature_3_winsor_clean[!(feature_3_winsor_clean[, 4] < 1 | feature_3_winsor_clean[, 4] > 99), ]
non_matching_keys <- anti_join(train, feature_3_winsor_df, by = "key")$key
train <- train %>% mutate(feature_3 = ifelse(key %in% non_matching_keys, NA, feature_3))
colnames(train)[3] <- "feature_3_winsor"
ggplot(data=train,aes(feature_3_winsor)) + geom_density()
train[is.na(train[,3]),3] <- median(feature_3_winsor_clean$feature_3)
colnames(train)[3] <- "feature_3_impute"
test[is.na(test[,3]),3] <- median(feature_3_winsor_clean$feature_3)
train_unmodified[is.na(train_unmodified[,2]) , 2] <- train_unmodified[is.na(train_unmodified[,2]),1]
train_unmodified[is.na(train_unmodified[,2]) , 2] <- train_unmodified[is.na(train_unmodified[,2]),3]
train$feature_2 <- train_unmodified$feature_2
colnames(train)[2] <- "feature_2_impute"
test[is.na(test[,2]) , 2] <- test[is.na(test[,2]),1]
test[is.na(test[,2]) , 2] <- test[is.na(test[,2]),3]
test$feature_2 <- test$feature_2
colnames(test)[2] <- "feature_2_impute"
train
(colnames(train))
library(ggplot2)
ggplot(data=train,aes(x=feature_1)) + geom_density() + geom_density(data=train,aes(x=feature_2_impute)) + geom_density(data=train,aes(x=feature_3_impute))
train
library(dplyr)
train <- train %>%
mutate(across(c(feature_1, feature_2_impute, feature_3_impute, feature_4),
~ (.x - mean(.x, na.rm = TRUE)) / sd(.x, na.rm = TRUE)))
train
library(tidyverse)
train <- read.csv(file="FITB_train.csv",header=TRUE)
test <- read.csv(file="FITB_test.csv",header=TRUE)
train_unmodified <- train
library(ggplot2)
ggplot(data=train,aes(feature_3)) + geom_density()
ggplot(data=test,aes(feature_3)) + geom_density()
train$key <- row.names(train)
feature_3_winsor <- data.frame(feature_3 = train$feature_3, key = row.names(train))
feature_3_winsor_clean <- na.omit(feature_3_winsor)
feature_3_winsor_clean <- feature_3_winsor_clean %>%
mutate(z_score = (feature_3 - mean(feature_3)) / sd(feature_3),percentile = ecdf(feature_3)(feature_3) * 100)
feature_3_winsor_df <- feature_3_winsor_clean[!(feature_3_winsor_clean[, 4] < 1 | feature_3_winsor_clean[, 4] > 99), ]
non_matching_keys <- anti_join(train, feature_3_winsor_df, by = "key")$key
train <- train %>% mutate(feature_3 = ifelse(key %in% non_matching_keys, NA, feature_3))
colnames(train)[3] <- "feature_3_winsor"
ggplot(data=train,aes(feature_3_winsor)) + geom_density()
train[is.na(train[,3]),3] <- median(feature_3_winsor_clean$feature_3)
colnames(train)[3] <- "feature_3_impute"
test[is.na(test[,3]),3] <- median(feature_3_winsor_clean$feature_3)
train_unmodified[is.na(train_unmodified[,2]) , 2] <- train_unmodified[is.na(train_unmodified[,2]),1]
train_unmodified[is.na(train_unmodified[,2]) , 2] <- train_unmodified[is.na(train_unmodified[,2]),3]
train$feature_2 <- train_unmodified$feature_2
colnames(train)[2] <- "feature_2_impute"
test[is.na(test[,2]) , 2] <- test[is.na(test[,2]),1]
test[is.na(test[,2]) , 2] <- test[is.na(test[,2]),3]
test$feature_2 <- test$feature_2
colnames(test)[2] <- "feature_2_impute"
train
(colnames(train))
library(ggplot2)
ggplot(data=train,aes(x=feature_1)) + geom_density() + geom_density(data=train,aes(x=feature_2_impute)) + geom_density(data=train,aes(x=feature_3_impute))
train
library(dplyr)
train <- train %>%
mutate(across(c(feature_1, feature_2_impute, feature_3_impute, feature_4),
~ (.x - mean(.x, na.rm = TRUE)) / sd(.x, na.rm = TRUE)))
train
library(tidyverse)
train <- read.csv(file="FITB_train.csv",header=TRUE)
test <- read.csv(file="FITB_test.csv",header=TRUE)
train_unmodified <- train
library(ggplot2)
ggplot(data=train,aes(feature_3)) + geom_density()
ggplot(data=test,aes(feature_3)) + geom_density()
train$key <- row.names(train)
feature_3_winsor <- data.frame(feature_3 = train$feature_3, key = row.names(train))
feature_3_winsor_clean <- na.omit(feature_3_winsor)
feature_3_winsor_clean <- feature_3_winsor_clean %>%
mutate(z_score = (feature_3 - mean(feature_3)) / sd(feature_3),percentile = ecdf(feature_3)(feature_3) * 100)
feature_3_winsor_df <- feature_3_winsor_clean[!(feature_3_winsor_clean[, 4] < 1 | feature_3_winsor_clean[, 4] > 99), ]
non_matching_keys <- anti_join(train, feature_3_winsor_df, by = "key")$key
train <- train %>% mutate(feature_3 = ifelse(key %in% non_matching_keys, NA, feature_3))
colnames(train)[3] <- "feature_3_winsor"
ggplot(data=train,aes(feature_3_winsor)) + geom_density()
train[is.na(train[,3]),3] <- median(feature_3_winsor_clean$feature_3)
colnames(train)[3] <- "feature_3_impute"
test[is.na(test[,3]),3] <- median(feature_3_winsor_clean$feature_3)
train_unmodified[is.na(train_unmodified[,2]) , 2] <- train_unmodified[is.na(train_unmodified[,2]),1]
train_unmodified[is.na(train_unmodified[,2]) , 2] <- train_unmodified[is.na(train_unmodified[,2]),3]
train$feature_2 <- train_unmodified$feature_2
colnames(train)[2] <- "feature_2_impute"
test[is.na(test[,2]) , 2] <- test[is.na(test[,2]),1]
test[is.na(test[,2]) , 2] <- test[is.na(test[,2]),3]
test$feature_2 <- test$feature_2
colnames(test)[2] <- "feature_2_impute"
train
(colnames(train))
library(ggplot2)
ggplot(data=train,aes(x=feature_1)) + geom_density() + geom_density(data=train,aes(x=feature_2_impute)) + geom_density(data=train,aes(x=feature_3_impute))
train
library(dplyr)
train <- train %>%
mutate(across(c(feature_1, feature_2_impute, feature_3_impute, feature_4),
~ (.x - mean(.x, na.rm = TRUE)) / sd(.x, na.rm = TRUE)))
train
ggplot(data=train,aes(x=feature_1)) + geom_density() + geom_density(data=train,aes(x=feature_2_impute)) + geom_density(data=train,aes(x=feature_3_impute))
